[
["index.html", "2020統計解析演習B資料 S 1 ベクトルと行列 1.1 問1.1 1.2 問1.2 1.3 問1.3 1.4 問1.4 1.5 演習問題1", " 2020統計解析演習B資料 石田 淳 関西学院大学社会学部2020-09-30 S 1 ベクトルと行列 矢野健太郎・田代嘉宏，1991，『社会科学者のための基礎数学（改訂版）』裳華房，1-2章の問題をRで解いていく．よい子は最初は手計算しよう． だいたいのところで，tidyverseを用いている．最初に用いる際には，以下のコードを実行してあらかじめ環境にパッケージをインストールしておく必要がある． install.packages(&quot;tidyvese&quot;) Rでベクトルはc()で構成されるが，行ベクトル列ベクトルの区別がないので注意．行ベクトル列ベクトルを厳密に区別したいときは，matrixを用いる． 1.1 問1.1 a &lt;- c(2,1,4) b &lt;- c(5,4,-5) c &lt;- c(3,2,1) a+3*b ## [1] 17 13 -11 a-b+2*c ## [1] 3 1 11 4*a+2*b-6*c ## [1] 0 0 0 1.2 問1.2 1次元ベクトルから行列を構成する場合にはmatrix関数でベクトルを入れた上で行数列数を指定する．1列目から順にベクトルの要素を埋めていく．行優先で要素を埋めたい場合は，オプションでbyrow = TRUEとする． A &lt;- matrix(c(2,4,1,-6,-3,5),nrow = 2, ncol = 3) B &lt;- matrix(c(1,3,4,3,0,-1),nrow = 2, ncol = 3, byrow = TRUE) A+B ## [,1] [,2] [,3] ## [1,] 3 4 1 ## [2,] 7 -6 4 A-B ## [,1] [,2] [,3] ## [1,] 1 -2 -7 ## [2,] 1 -6 6 3*A ## [,1] [,2] [,3] ## [1,] 6 3 -9 ## [2,] 12 -18 15 2*A+3*B ## [,1] [,2] [,3] ## [1,] 7 11 6 ## [2,] 17 -12 7 1.3 問1.3 行列の積はRでは%*%，ただの*だと各要素事のかけ算を返すので注意． A &lt;- matrix(c(2,4,1,-6,-3,5),nrow = 2, ncol = 3) B &lt;- matrix(c(-1,3,2,3,0,4),nrow = 3, ncol = 2) A %*% B ## [,1] [,2] ## [1,] -5 -6 ## [2,] -12 32 一般的に言うと，\\((m,n)\\)行列\\(A\\)と\\((n,l)\\)行列\\(B\\)の積\\(AB\\)は，\\(A\\)の\\(i\\)行目の行ベクトル\\(\\mathbf{a}_{i\\cdot}=(a_{i1}, a_{i2}, \\cdots, a_{in})\\)と\\(B\\)の\\(j\\)列目の列ベクトル\\(\\mathbf{b}_{\\cdot j}=(b_{1j}, b_{2j}, \\cdots, b_{nj})\\)の内積(inner product) \\[\\mathbf{a}_{i\\cdot}*\\mathbf{b}_{\\cdot j}=\\sum_{k=1}^n a_{ik}b_{kj}\\] を\\((i,j)\\)要素とする\\((m,l)\\)行列になる．この定義に従って行列の積関数を自作すると以下のようになる． seki &lt;- function(A, B) { if (dim(A)[2] == dim(B)[1]) { nrow &lt;- dim(A)[1] ncol &lt;- dim(B)[2] vec &lt;- c() for (j in 1:ncol) { for (i in 1:nrow) { vec &lt;- append(vec,A[i,] %*% B[,j]) } } matrix(vec, nrow , ncol) } else { stop(&quot;かけ算できないよ!\\n&quot;) } } seki(A, B) ## [,1] [,2] ## [1,] -5 -6 ## [2,] -12 32 A &lt;- matrix(c(-1,3,2,3,0,4),nrow = 3, ncol = 2) B &lt;- matrix(c(2,4,1,-6,-3,5),nrow = 2, ncol = 3) A %*% B ## [,1] [,2] [,3] ## [1,] 10 -19 18 ## [2,] 6 3 -9 ## [3,] 20 -22 14 A &lt;- matrix(c(3,1,-6,5,2,3,-4,1,2),nrow = 3, ncol = 3) B &lt;- matrix(c(1,2,3), nrow = 3, ncol = 1) A %*% B ## [,1] ## [1,] 1 ## [2,] 8 ## [3,] 6 A &lt;- diag(3) # 単位行列E B &lt;- matrix(c(2,4,5,3,-1,-2), nrow = 3, ncol = 2) A %*% B ## [,1] [,2] ## [1,] 2 3 ## [2,] 4 -1 ## [3,] 5 -2 1.4 問1.4 A &lt;- matrix(c(1,0,5,1),2,2) r &lt;- 10 B &lt;- A for (i in 1:(r-1)) { B &lt;- B %*% A } B ## [,1] [,2] ## [1,] 1 50 ## [2,] 0 1 A &lt;- matrix(c(0,0,0,1,0,0,3,2,0),3,3) r &lt;- 10 B &lt;- A for (i in 1:(r-1)) { B &lt;- B %*% A } B ## [,1] [,2] [,3] ## [1,] 0 0 0 ## [2,] 0 0 0 ## [3,] 0 0 0 A &lt;- matrix(c(1,0,0,1,1,0,1,1,1),3,3) r &lt;- 10 B &lt;- A for (i in 1:(r-1)) { B &lt;- B %*% A } B ## [,1] [,2] [,3] ## [1,] 1 10 55 ## [2,] 0 1 10 ## [3,] 0 0 1 1.5 演習問題1 1 a &lt;- matrix(c(3,-1),2,1) b &lt;- matrix(c(-2,0),1,2) A &lt;- matrix(c(1,3,2,-2),2,2) B &lt;- matrix(c(4,2,3,-3,1,5),2,3) C &lt;- matrix(c(1,2,-3,1,-1,2),3,2) a %*% b ## [,1] [,2] ## [1,] -6 0 ## [2,] 2 0 b %*% a ## [,1] ## [1,] -6 A %*% B ## [,1] [,2] [,3] ## [1,] 8 -3 11 ## [2,] 8 15 -7 C %*% B ## [,1] [,2] [,3] ## [1,] 6 0 6 ## [2,] 6 9 -3 ## [3,] -8 -15 7 A %*% B %*% C ## [,1] [,2] ## [1,] -31 33 ## [2,] 59 -21 2*(B %*% C) + 3*A ## [,1] [,2] ## [1,] 17 12 ## [2,] -29 24 A %*% a ## [,1] ## [1,] 1 ## [2,] 11 b %*% A ## [,1] [,2] ## [1,] -2 -4 2 P &lt;- matrix(c(0.3,0.7,0.4,0.6),2,2) P %*% P ## [,1] [,2] ## [1,] 0.37 0.36 ## [2,] 0.63 0.64 P %*% P %*% P ## [,1] [,2] ## [1,] 0.363 0.364 ## [2,] 0.637 0.636 P %*% P %*% P %*% P ## [,1] [,2] ## [1,] 0.3637 0.3636 ## [2,] 0.6363 0.6364 3 一例として， A &lt;- matrix(c(0,1,1,0),2,2) A ## [,1] [,2] ## [1,] 0 1 ## [2,] 1 0 A %*% A ## [,1] [,2] ## [1,] 1 0 ## [2,] 0 1 一例として， A &lt;- matrix(c(1,-1,1,-1),2,2) A ## [,1] [,2] ## [1,] 1 1 ## [2,] -1 -1 A %*% A ## [,1] [,2] ## [1,] 0 0 ## [2,] 0 0 "],
["ベクトルの表現と1次変換.html", "S 2 ベクトルの表現と1次変換 2.1 p.10の例 2.2 問題2.1 2.3 問題2.2 2.4 問題2.3 2.5 問題2.4 2.6 演習問題2", " S 2 ベクトルの表現と1次変換 2.1 p.10の例 a &lt;- c(3,1) b &lt;- c(-1,2) c &lt;- a + b plot(0, 0, xlim=c(min(0,a[1],b[1],c[1]), max(0,a[1],b[1],c[1])), ylim=c(min(0,a[2],b[2],c[2]), max(0,a[2],b[2],c[2])), asp=1,xlab = &quot;&quot;, ylab = &quot;&quot;) arrows(0, 0, x1 = a[1], y1 = a[2]); text(a[1]*1.05, a[2]*1.05, &quot;a&quot;) arrows(0, 0, x1 = b[1], y1 = b[2]); text(b[1]*1.05, b[2]*1.05, &quot;b&quot;) arrows(0, 0, x1 = c[1], y1 = c[2],col=&quot;red&quot;); text(c[1]*1.05, c[2]*1.05, &quot;c&quot;) 2.2 問題2.1 a &lt;- c(2,3) b &lt;- c(-1,4) c &lt;- c(-3,-4) plot(0, 0, xlim=c(min(0,a[1],b[1],c[1]), max(0,a[1],b[1],c[1])), ylim=c(min(0,a[2],b[2],c[2]), max(0,a[2],b[2],c[2])), asp=1,xlab = &quot;&quot;, ylab = &quot;&quot;) arrows(0, 0, x1 = a[1], y1 = a[2]); text(a[1]*1.05, a[2]*1.05, &quot;a&quot;) arrows(0, 0, x1 = b[1], y1 = b[2]); text(b[1]*1.05, b[2]*1.05, &quot;b&quot;) arrows(0, 0, x1 = c[1], y1 = c[2]); text(c[1]*1.05, c[2]*1.05, &quot;c&quot;) a &lt;- c(2,3) d &lt;- -2*a plot(0, 0, xlim=c(min(0,a[1],d), max(0,a[1],d[1])), ylim=c(min(0,a[2],d[2]), max(0,a[2],d[2])), asp=1,xlab = &quot;&quot;, ylab = &quot;&quot;) arrows(0, 0, x1 = a[1], y1 = a[2]); text(a[1]*1.05, a[2]*1.05, &quot;a&quot;) arrows(0, 0, x1 = d[1], y1 = d[2], col = &quot;red&quot;); text(d[1]*1.05, d[2]*1.05, &quot;d&quot;) a &lt;- c(2,3) b &lt;- c(-1,4) d &lt;- a+b plot(0, 0, xlim=c(min(0,a[1],b[1],d[1]), max(0,a[1],b[1],d[1])), ylim=c(min(0,a[2],b[2],d[2]), max(0,a[2],b[2],d[2])), asp=1,xlab = &quot;&quot;, ylab = &quot;&quot;) arrows(0, 0, x1 = a[1], y1 = a[2]); text(a[1]*1.05, a[2]*1.05, &quot;a&quot;) arrows(0, 0, x1 = b[1], y1 = b[2]); text(b[1]*1.05, b[2]*1.05, &quot;b&quot;) arrows(0, 0, x1 = d[1], y1 = d[2], col = &quot;red&quot;); text(d[1]*1.05, d[2]*1.05, &quot;d&quot;) a &lt;- c(2,3) c &lt;- c(-3,-4) d &lt;- 3*a+2*c plot(0, 0, xlim=c(min(0,a[1],c[1],d[1]), max(0,a[1],c[1],d[1])), ylim=c(min(0,a[2],c[2],d[2]), max(0,a[2],c[2],d[2])), asp=1,xlab = &quot;&quot;, ylab = &quot;&quot;) arrows(0, 0, x1 = a[1], y1 = a[2]); text(a[1]*1.05, a[2]*1.05, &quot;a&quot;) arrows(0, 0, x1 = c[1], y1 = c[2]); text(c[1]*1.05, c[2]*1.05, &quot;c&quot;) arrows(0, 0, x1 = d[1], y1 = d[2], col = &quot;red&quot;); text(d[1]*1.05, d[2]*1.05, &quot;d&quot;) a &lt;- c(2,3) b &lt;- c(-1,4) c &lt;- c(-3,-4) d &lt;- 5*a-b+2*c plot(0, 0, xlim=c(min(0,a[1],b[1],c[1],d[1]), max(0,a[1],b[1],c[1],d[1])), ylim=c(min(0,a[2],b[2],c[2],d[2]), max(0,a[2],b[2],c[2],d[2])), asp=1,xlab = &quot;&quot;, ylab = &quot;&quot;) arrows(0, 0, x1 = a[1], y1 = a[2]); text(a[1]*1.05, a[2]*1.05, &quot;a&quot;) arrows(0, 0, x1 = b[1], y1 = b[2]); text(b[1]*1.05, b[2]*1.05, &quot;b&quot;) arrows(0, 0, x1 = c[1], y1 = c[2]); text(c[1]*1.05, c[2]*1.05, &quot;c&quot;) arrows(0, 0, x1 = d[1], y1 = d[2], col = &quot;red&quot;); text(d[1]*1.05, d[2]*1.05, &quot;d&quot;) 2.3 問題2.2 library(tidyverse) ## -- Attaching packages --------------- tidyverse 1.3.0 -- ## √ ggplot2 3.3.0 √ purrr 0.3.4 ## √ tibble 3.0.1 √ dplyr 0.8.5 ## √ tidyr 1.0.3 √ stringr 1.4.0 ## √ readr 1.3.1 √ forcats 0.5.0 ## -- Conflicts ------------------ tidyverse_conflicts() -- ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() A &lt;- matrix(c(2,-1,1,3),2,2) A %*% matrix(c(2,3),2,1) ## [,1] ## [1,] 7 ## [2,] 7 cardesian &lt;- expand.grid(x = seq(-10,10,1), y = seq(-10,10,1)) trans &lt;- cardesian for (i in 1:nrow(cardesian)) { trans[i,]&lt;-A %*% t(as.matrix(cardesian[i,])) } # 一気にやる場合 # A %*% t(cardesian) %&gt;% # t() %&gt;% as_tibble() %&gt;% # rename(x = V1, y = V2) -&gt; trans bind_rows(&quot;Original&quot; = cardesian, &quot;Transformed&quot; = trans, .id = &quot;type&quot;) %&gt;% ggplot() + geom_point(aes(x=x,y=y,color=type)) + coord_fixed() + theme_classic() 線形従属の例 A &lt;- matrix(c(2,2,1,1),2,2) cardesian &lt;- expand.grid(x = seq(-10,10,1), y = seq(-10,10,1)) trans &lt;- cardesian for (i in 1:nrow(cardesian)) { trans[i,]&lt;-A %*% t(as.matrix(cardesian[i,])) } bind_rows(&quot;Original&quot; = cardesian, &quot;Transformed&quot; = trans, .id = &quot;type&quot;) %&gt;% ggplot() + geom_point(aes(x=x,y=y,color=type)) + coord_fixed() + theme_classic() 2.4 問題2.3 証明略 library(tidyverse) ## rotate 45 degree alpha &lt;- pi*(45/180) A &lt;- matrix(c(cos(alpha),sin(alpha),-sin(alpha),cos(alpha)),2,2) cardesian &lt;- expand.grid(x = seq(-10,10,1), y = seq(-10,10,1)) trans &lt;- cardesian for (i in 1:nrow(cardesian)) { trans[i,]&lt;-A %*% t(as.matrix(cardesian[i,])) } bind_rows(&quot;Original&quot; = cardesian, &quot;Transformed&quot; = trans, .id = &quot;type&quot;) %&gt;% ggplot() + geom_point(aes(x=x,y=y,color=type)) + coord_fixed() + theme_classic() 2.5 問題2.4 A &lt;- matrix(c(2,-1,1,-3,2,4,1,3,-2),3,3) A ## [,1] [,2] [,3] ## [1,] 2 -3 1 ## [2,] -1 2 3 ## [3,] 1 4 -2 A %*% matrix(c(3,1,2),3,1) ## [,1] ## [1,] 5 ## [2,] 5 ## [3,] 3 2.6 演習問題2 1 \\[\\left( \\begin{array}{cc} 2 &amp; -1 \\\\ 1 &amp; 3 \\\\ \\end{array} \\right)\\left( \\begin{array}{c} x \\\\ y \\\\ \\end{array} \\right)=\\left( \\begin{array}{c} x&#39; \\\\ y&#39; \\\\ \\end{array} \\right)\\] A &lt;- matrix(c(2,1,-1,3),2,2) A %*% matrix(c(1,0),2,1) ## [,1] ## [1,] 2 ## [2,] 1 A %*% matrix(c(0,1),2,1) ## [,1] ## [1,] -1 ## [2,] 3 A %*% matrix(c(2,-1),2,1) ## [,1] ## [1,] 5 ## [2,] -1 2 set.seed(8931) expand.grid(x = seq(-10,10,1), y = seq(-10,10,1)) %&gt;% sample_n(50) %&gt;% mutate(col = x*y) -&gt; cardesian cardesian %&gt;% ggplot() + geom_point(aes(x=x,y=y,color =col)) + scale_color_gradientn(colours = rainbow(7)) + coord_fixed() + theme_classic() \\(x\\)軸 A &lt;- matrix(c(1,0,0,-1),2,2) trans &lt;- cardesian for (i in 1:nrow(cardesian)) { trans[i,1:2]&lt;-A %*% t(as.matrix(cardesian[i,1:2])) } trans %&gt;% ggplot() + geom_point(aes(x=x,y=y,color =col)) + scale_color_gradientn(colours = rainbow(7)) + coord_fixed() + theme_classic() \\(y\\)軸 A &lt;- matrix(c(-1,0,0,1),2,2) trans &lt;- cardesian for (i in 1:nrow(cardesian)) { trans[i,1:2]&lt;-A %*% t(as.matrix(cardesian[i,1:2])) } trans %&gt;% ggplot() + geom_point(aes(x=x,y=y,color =col)) + scale_color_gradientn(colours = rainbow(7)) + coord_fixed() + theme_classic() 原点 A &lt;- matrix(c(-1,0,0,-1),2,2) trans &lt;- cardesian for (i in 1:nrow(cardesian)) { trans[i,1:2]&lt;-A %*% t(as.matrix(cardesian[i,1:2])) } trans %&gt;% ggplot() + geom_point(aes(x=x,y=y,color =col)) + scale_color_gradientn(colours = rainbow(7)) + coord_fixed() + theme_classic() \\(y=x\\) A &lt;- matrix(c(0,1,1,0),2,2) trans &lt;- cardesian for (i in 1:nrow(cardesian)) { trans[i,1:2]&lt;-A %*% t(as.matrix(cardesian[i,1:2])) } trans %&gt;% ggplot() + geom_point(aes(x=x,y=y,color =col)) + scale_color_gradientn(colours = rainbow(7)) + coord_fixed() + theme_classic() 3 A &lt;- matrix(c(3,1,1,2),2,2) B &lt;- matrix(c(2,3,-3,-4),2,2) x &lt;- matrix(c(2,1),2,1) A %*% B ## [,1] [,2] ## [1,] 9 -13 ## [2,] 8 -11 B %*% A ## [,1] [,2] ## [1,] 3 -4 ## [2,] 5 -5 A %*% B %*% x ## [,1] ## [1,] 5 ## [2,] 5 B %*% A %*% x ## [,1] ## [1,] 2 ## [2,] 5 "],
["行列式.html", "S 3 行列式 3.1 例題3.1 3.2 問題3.1 3.3 問題3.2", " S 3 行列式 3.1 例題3.1 2次元の場合行列Aの行列式の絶対値は，面積1の正方形を行列Aで変換した四角形の面積という意味を持つ． A &lt;- matrix(c(4,3,1,2),2,2) det(A) ## [1] 5 a &lt;- A[,1] b &lt;- A[,2] c &lt;- a + b plot(0, 0, xlim=c(min(0,a[1],b[1],c[1]), max(0,a[1],b[1],c[1])), ylim=c(min(0,a[2],b[2],c[2]), max(0,a[2],b[2],c[2])), asp=1,xlab = &quot;&quot;, ylab = &quot;&quot;) polygon(c(0, a[1], c[1], b[1]),c(0, a[2], c[2], b[2]),col = &quot;skyblue&quot;) 3.2 問題3.1 A &lt;- matrix(c(8,4,3,2),2,2) det(A) ## [1] 4 a &lt;- A[,1] b &lt;- A[,2] c &lt;- a + b plot(0, 0, xlim=c(min(0,a[1],b[1],c[1]), max(0,a[1],b[1],c[1])), ylim=c(min(0,a[2],b[2],c[2]), max(0,a[2],b[2],c[2])), asp=1,xlab = &quot;&quot;, ylab = &quot;&quot;) polygon(c(0, a[1], c[1], b[1]),c(0, a[2], c[2], b[2]),col = &quot;skyblue&quot;) A &lt;- matrix(c(3,9,-2,-6),2,2) det(A) ## [1] 0 a &lt;- A[,1] b &lt;- A[,2] c &lt;- a + b plot(0, 0, xlim=c(min(0,a[1],b[1],c[1]), max(0,a[1],b[1],c[1])), ylim=c(min(0,a[2],b[2],c[2]), max(0,a[2],b[2],c[2])), asp=1,xlab = &quot;&quot;, ylab = &quot;&quot;) polygon(c(0, a[1], c[1], b[1]),c(0, a[2], c[2], b[2]),col = &quot;skyblue&quot;) ## rotate 45 degree alpha &lt;- pi*(45/180) A &lt;- matrix(c(cos(alpha),sin(alpha),-sin(alpha),cos(alpha)),2,2) det(A) ## [1] 1 a &lt;- A[,1] b &lt;- A[,2] c &lt;- a + b plot(0, 0, xlim=c(min(0,a[1],b[1],c[1]), max(0,a[1],b[1],c[1])), ylim=c(min(0,a[2],b[2],c[2]), max(0,a[2],b[2],c[2])), asp=1,xlab = &quot;&quot;, ylab = &quot;&quot;) polygon(c(0, a[1], c[1], b[1]),c(0, a[2], c[2], b[2]),col = &quot;skyblue&quot;) A &lt;- matrix(c(1,5,6,4,0,7,2,-2,3),3,3) det(A) ## [1] -24 A &lt;- matrix(c(2,4,5,1,2,3,1,-4,1),3,3) det(A) ## [1] 6 A &lt;- matrix(c(6,4,-6,2,3,1,-1,1,4),3,3) det(A) ## [1] 3.996803e-15 3.3 問題3.2 A &lt;- matrix(c(1,1,-4,1,2,-3,2,3,2),3,3) det(A) ## [1] 9 A &lt;- matrix(c(5,3,7,8,6,9,1,-1,3),3,3) det(A) ## [1] -8 A &lt;- matrix(c(4,12,-8,1,3,7,3,0,6),3,3) det(A) ## [1] 324 "],
["行列式の展開と逆行列.html", "S 4 行列式の展開と逆行列 4.1 問題4.2 4.2 問題4.5 4.3 例題4.4 4.4 問題4.6 4.5 演習問題4", " S 4 行列式の展開と逆行列 4.1 問題4.2 A &lt;- matrix(c(1,2,4,5,3,1,7,4,2,3,5,2,1,5,3,6),4,4) det(A) ## [1] 60 A &lt;- matrix(c(3,-2,-4,1,1,4,3,5,6,-3,-7,3,3,4,5,8),4,4) det(A) ## [1] 1 4.2 問題4.5 A &lt;- matrix(c(4,3,-1,2),2,2) matrix(c(2,-3,1,4),2,2)/det(A) ## [,1] [,2] ## [1,] 0.1818182 0.09090909 ## [2,] -0.2727273 0.36363636 solve(A) ## [,1] [,2] ## [1,] 0.1818182 0.09090909 ## [2,] -0.2727273 0.36363636 A %*% solve(A) ## [,1] [,2] ## [1,] 1 0 ## [2,] 0 1 solve(A) %*% A ## [,1] [,2] ## [1,] 1 0 ## [2,] 0 1 A &lt;- matrix(c(1,2,4,2,3,2,3,5,1),3,3) det(A) ## [1] 5 solve(A) ## [,1] [,2] [,3] ## [1,] -1.4 0.8 0.2 ## [2,] 3.6 -2.2 0.2 ## [3,] -1.6 1.2 -0.2 4.3 例題4.4 連立一次方程式を解く． A &lt;- matrix(c(1,2,4,2,1,5,3,4,6),3,3) b &lt;- matrix(c(1,-3,7),3,1) solve(A,b) ## [,1] ## [1,] 1 ## [2,] 3 ## [3,] -2 4.4 問題4.6 A &lt;- matrix(c(4,3,-1,2),2,2) b &lt;- matrix(c(24,7),2,1) solve(A,b) ## [,1] ## [1,] 5 ## [2,] -4 A &lt;- matrix(c(1,2,4,2,3,2,3,5,1),3,3) b &lt;- matrix(c(2,5,9),3,1) solve(A,b) ## [,1] ## [1,] 3 ## [2,] -2 ## [3,] 1 4.5 演習問題4 1 A &lt;- matrix(c(1,2,3,6,1,4,2,5,4),3,3) det(A) ## [1] 36 A &lt;- matrix(c(2,5,3,4,3,9,1,-2,3),3,3) det(A) ## [1] 6 A &lt;- matrix(c(9,1,4,6,7,5,2,4,6,2,4,1,5,3,6,-1),4,4) det(A) ## [1] 216 A &lt;- matrix(c(3,2,2,7,3,7,3,5,4,6,4,3,1,4,2,1),4,4) det(A) ## [1] 50 2 A &lt;- matrix(c(3,1,5,2),2,2) if (det(A)!=0) solve(A) else print(&quot;正則ではない&quot;) ## [,1] [,2] ## [1,] 2 -5 ## [2,] -1 3 A &lt;- matrix(c(3,1,6,2),2,2) if (det(A)!=0) solve(A) else print(&quot;正則ではない&quot;) ## [1] &quot;正則ではない&quot; A &lt;- matrix(c(-2,-3,-1,4),2,2) if (det(A)!=0) solve(A) else print(&quot;正則ではない&quot;) ## [,1] [,2] ## [1,] -0.3636364 -0.09090909 ## [2,] -0.2727273 0.18181818 A &lt;- matrix(c(3,1,0,2,1,1,-2,0,-1),3,3) if (det(A)!=0) solve(A) else print(&quot;正則ではない&quot;) ## [,1] [,2] [,3] ## [1,] 0.3333333 0 -0.6666667 ## [2,] -0.3333333 1 0.6666667 ## [3,] -0.3333333 1 -0.3333333 A &lt;- matrix(c(0,1,-1,3,-2,5,3,-3,6),3,3) if (det(A)!=0) solve(A) else print(&quot;正則ではない&quot;) ## [1] &quot;正則ではない&quot; A &lt;- matrix(c(1,0,1,0,1,1,1,1,0),3,3) if (det(A)!=0) solve(A) else print(&quot;正則ではない&quot;) ## [,1] [,2] [,3] ## [1,] 0.5 -0.5 0.5 ## [2,] -0.5 0.5 0.5 ## [3,] 0.5 0.5 -0.5 "],
["連立一次方程式.html", "S 5 連立一次方程式 5.1 例題5.1 5.2 問題5.1 5.3 問題5.2 5.4 例題5.3 5.5 問題5.3 5.6 例題5.4 5.7 問題5.4 5.8 演習問題5", " S 5 連立一次方程式 5.1 例題5.1 A &lt;- matrix(c(1,2,4,2,1,5,3,4,6),3,3) b &lt;- matrix(c(1,-3,7),3,1) solve(A,b) ## [,1] ## [1,] 1 ## [2,] 3 ## [3,] -2 c(det(cbind(b,A[,c(2,3)]))/det(A), det(cbind(A[,1],b,A[,3]))/det(A), det(cbind(A[,c(1,2)],b))/det(A) ) ## [1] 1 3 -2 5.2 問題5.1 A &lt;- matrix(c(4,3,-1,2),2,2) b &lt;- matrix(c(24,7),2,1) solve(A,b) ## [,1] ## [1,] 5 ## [2,] -4 c(det(cbind(b,A[,2]))/det(A), det(cbind(A[,1],b))/det(A) ) ## [1] 5 -4 A &lt;- matrix(c(1,2,4,2,3,2,3,5,1),3,3) b &lt;- matrix(c(2,5,9),3,1) solve(A,b) ## [,1] ## [1,] 3 ## [2,] -2 ## [3,] 1 c(det(cbind(b,A[,c(2,3)]))/det(A), det(cbind(A[,1],b,A[,3]))/det(A), det(cbind(A[,c(1,2)],b))/det(A) ) ## [1] 3 -2 1 5.3 問題5.2 A &lt;- matrix(c(3,4,2,1,3,-3,-2,-5,5),3,3) det(A) ## [1] 6 A &lt;- matrix(c(4,3,5,-2,5,3,5,-6,-2),3,3) det(A) ## [1] 1.953993e-14 A ## [,1] [,2] [,3] ## [1,] 4 -2 5 ## [2,] 3 5 -6 ## [3,] 5 3 -2 A[1,]+A[2,]-A[3,] ## [1] 2 0 1 #z = -2x #y = -3x 5.4 例題5.3 掃き出し法をリテラルにやってみる． Ab &lt;- matrix(c(2,1,5,1,2,4,4,-2,-4,7,0,9),3,4) Ab[1,] &lt;- Ab[1,]/Ab[1,1] Ab[2,] &lt;- Ab[2,]-Ab[1,]*Ab[2,1] Ab[3,] &lt;- Ab[3,]-Ab[1,]*Ab[3,1] Ab[2,] &lt;- Ab[2,]/Ab[2,2] Ab[1,] &lt;- Ab[1,]-Ab[2,]*Ab[1,2] Ab[3,] &lt;- Ab[3,]-Ab[2,]*Ab[3,2] Ab[3,] &lt;- Ab[3,]/Ab[3,3] Ab[1,] &lt;- Ab[1,]-Ab[3,]*Ab[1,3] Ab[2,] &lt;- Ab[2,]-Ab[3,]*Ab[2,3] Ab ## [,1] [,2] [,3] [,4] ## [1,] 1 0 0 3.0 ## [2,] 0 1 0 -1.0 ## [3,] 0 0 1 0.5 関数としてパッケージ化． hakidashi &lt;- function(Ab) { d &lt;- dim(Ab)[1] for (i in 1:d) { Ab[i,] &lt;- Ab[i,]/Ab[i,i] for (j in setdiff(1:d,i)) { Ab[j,] &lt;- Ab[j,]-Ab[i,]*Ab[j,i] } } round(Ab, digits = 5) } Ab &lt;- matrix(c(2,1,5,1,2,4,4,-2,-4,7,0,9),3,4) hakidashi(Ab) ## [,1] [,2] [,3] [,4] ## [1,] 1 0 0 3.0 ## [2,] 0 1 0 -1.0 ## [3,] 0 0 1 0.5 5.5 問題5.3 Ab &lt;- matrix(c(1,2,3,1,-1,2,1,1,-1,6,3,4),3,4) hakidashi(Ab) ## [,1] [,2] [,3] [,4] ## [1,] 1 0 0 1 ## [2,] 0 1 0 2 ## [3,] 0 0 1 3 Ab &lt;- matrix(c(3,2,1,-1,4,-1,2,-1,3,-7,28,-19),3,4) hakidashi(Ab) ## [,1] [,2] [,3] [,4] ## [1,] 1 0 0 3 ## [2,] 0 1 0 4 ## [3,] 0 0 1 -6 5.6 例題5.4 Ab &lt;- matrix(c(1,3,1,2,1,1,4,0,2, 1,0,0,0,1,0,0,0,1),3,6) hakidashi(Ab) ## [,1] [,2] [,3] [,4] [,5] [,6] ## [1,] 1 0 0 -1 0.0 2.0 ## [2,] 0 1 0 3 1.0 -6.0 ## [3,] 0 0 1 -1 -0.5 2.5 5.7 問題5.4 Ab &lt;- matrix(c(2,4,1,3,1,0,0,1),2,4) hakidashi(Ab) ## [,1] [,2] [,3] [,4] ## [1,] 1 0 1.5 -0.5 ## [2,] 0 1 -2.0 1.0 Ab &lt;- matrix(c(1,0,0,1,1,0,1,1,1, 1,0,0,0,1,0,0,0,1),3,6) hakidashi(Ab) ## [,1] [,2] [,3] [,4] [,5] [,6] ## [1,] 1 0 0 1 -1 0 ## [2,] 0 1 0 0 1 -1 ## [3,] 0 0 1 0 0 1 Ab &lt;- matrix(c(1,4,6,2,3,3,3,4,2, 1,0,0,0,1,0,0,0,1),3,6) hakidashi(Ab) ## [,1] [,2] [,3] [,4] [,5] [,6] ## [1,] 1 0 0 -0.75 0.625 -0.125 ## [2,] 0 1 0 2.00 -2.000 1.000 ## [3,] 0 0 1 -0.75 1.125 -0.625 5.8 演習問題5 Ab &lt;- matrix(c(1,5,2,4,-1,-2,3,1, -1,4,-1,-2,2,4,1,6, -3,18,14,6),4,5) hakidashi(Ab) ## [,1] [,2] [,3] [,4] [,5] ## [1,] 1 0 0 0 6 ## [2,] 0 1 0 0 2 ## [3,] 0 0 1 0 1 ## [4,] 0 0 0 1 -3 Ab &lt;- matrix(c(1,2,4,3,1,-1,3,1, 2,1,5,3,1,-1,-1,2, 10,-7,3,19),4,5) hakidashi(Ab) ## [,1] [,2] [,3] [,4] [,5] ## [1,] 1 0 0 0 1 ## [2,] 0 1 0 0 2 ## [3,] 0 0 1 0 0 ## [4,] 0 0 0 1 7 "],
["ベクトルの1次独立性と行列の階数.html", "S 6 ベクトルの1次独立性と行列の階数 6.1 例題6.1 6.2 問題6.2 6.3 ランク 6.4 問題6.3 6.5 演習問題6", " S 6 ベクトルの1次独立性と行列の階数 6.1 例題6.1 対角要素が0になったら打ち止めになるように，hakidashi関数を改造． hakidashi2 &lt;- function(Ab) { d &lt;- dim(Ab)[1] for (i in 1:d) { if (all(Ab[i:d,i] == 0)) break # lesser rank if (Ab[i,i] == 0) { # pivoting c &lt;- c(i:d)[Ab[i:d,1] != 0][1] temp &lt;- Ab[c,] Ab[c,] &lt;- Ab[i,] Ab[i,] &lt;- temp } Ab[i,] &lt;- Ab[i,]/Ab[i,i] for (j in setdiff(1:d,i)) { Ab[j,] &lt;- Ab[j,]-Ab[i,]*Ab[j,i] } } round(Ab, digits = 5) } Ab &lt;- matrix(c(0,3,-2,1,4,-2,6,2,3,11,9,2),3,4) hakidashi2(Ab) ## [,1] [,2] [,3] [,4] ## [1,] 1 0 0 3 ## [2,] 0 1 0 -1 ## [3,] 0 0 1 2 Ab &lt;- matrix(c(1,3,3,2,4,2,-1,2,7,3,5,1,1,4,5),3,5) hakidashi2(Ab) ## [,1] [,2] [,3] [,4] [,5] ## [1,] 1 0 4.0 -1 2.0 ## [2,] 0 1 -2.5 2 -0.5 ## [3,] 0 0 0.0 0 0.0 Ab &lt;- matrix(c(1,3,3,2,4,2,-1,2,7,3,5,1,1,4,7),3,5) hakidashi2(Ab) ## [,1] [,2] [,3] [,4] [,5] ## [1,] 1 0 4.0 -1 2.0 ## [2,] 0 1 -2.5 2 -0.5 ## [3,] 0 0 0.0 0 2.0 6.2 問題6.2 A &lt;- matrix(c(1,1,1,0,1,1,2,1,0),3,3) det(A) ## [1] -1 A &lt;- matrix(c(1,3,5,4,3,9,-4,6,2),3,3) det(A) ## [1] -1.065814e-14 hakidashi2(A) ## [,1] [,2] [,3] ## [1,] 1 0 4 ## [2,] 0 1 -2 ## [3,] 0 0 0 4*A[,1] -2*A[,2] ## [1] -4 6 2 6.3 ランク 定義通りにランクを計算する関数．要gtools． library(gtools) # for combinations rank &lt;- function(A) { r_max &lt;- min(dim(A)) for (k in 1:r_max) { r &lt;- r_max+1-k row_combi &lt;- combinations(dim(A)[1],r) col_combi &lt;- combinations(dim(A)[2],r) dets &lt;- c() for (i in 1:nrow(row_combi)) { for (j in 1:nrow(col_combi)) { det &lt;- det(as.matrix(A[row_combi[i,],col_combi[j,]])) dets &lt;- c(dets, round(det, digits = 5)) } } if (any(dets != 0 )) break } r } Ab &lt;- matrix(c(1,3,3,2,4,2,-1,2,7,3,5,1),3,4) rank(Ab) ## [1] 2 A &lt;- matrix(c(1,3,5,4,3,9,-4,6,2),3,3) det(A) ## [1] -1.065814e-14 rank(A) ## [1] 2 A &lt;- matrix(c(2,1,4,2),2,2) rank(A) ## [1] 1 6.4 問題6.3 A &lt;- matrix(c(2,5,4,-3,-8,-7,4,7,2,-2,-4,-2),3,4) b &lt;- matrix(c(4,9,6),3,1) Ab &lt;- cbind(A,b) rank(A) ## [1] 2 rank(Ab) ## [1] 2 # solve(A,b) # error hakidashi2(Ab) ## [,1] [,2] [,3] [,4] [,5] ## [1,] 1 0 11 -4 5 ## [2,] 0 1 6 -2 2 ## [3,] 0 0 0 0 0 A &lt;- matrix(c(2,5,4,-3,-8,-7,4,7,2,-2,-4,-2),3,4) b &lt;- matrix(c(4,9,3),3,1) Ab &lt;- cbind(A,b) rank(A) ## [1] 2 rank(Ab) ## [1] 3 hakidashi2(Ab) ## [,1] [,2] [,3] [,4] [,5] ## [1,] 1 0 11 -4 5 ## [2,] 0 1 6 -2 2 ## [3,] 0 0 0 0 -3 6.5 演習問題6 1 A &lt;- matrix(c(1,2,3,3,4,5,-2,1,4,3,5,7),3,4) rank(A) ## [1] 2 hakidashi2(A) ## [,1] [,2] [,3] [,4] ## [1,] 1 0 5.5 1.5 ## [2,] 0 1 -2.5 0.5 ## [3,] 0 0 0.0 0.0 A &lt;- matrix(c(3,4,5,1,2,3,-2,1,4,3,2,2,2,3,4),3,5) rank(A) ## [1] 3 hakidashi2(A) ## [,1] [,2] [,3] [,4] [,5] ## [1,] 1 0 -2.5 2 0.5 ## [2,] 0 1 5.5 -3 0.5 ## [3,] 0 0 0.0 1 0.0 2 A &lt;- matrix(c(1,2,5,8,-6,6,2,1,4),3,3) b &lt;- matrix(c(5,2,14),3,1) Ab &lt;- cbind(A,b) solve(A,b) ## [,1] ## [1,] 3.0 ## [2,] 0.5 ## [3,] -1.0 hakidashi2(Ab) ## [,1] [,2] [,3] [,4] ## [1,] 1 0 0 3.0 ## [2,] 0 1 0 0.5 ## [3,] 0 0 1 -1.0 A &lt;- matrix(c(1,2,5,2,5,3,1,3,5),3,3) b &lt;- matrix(c(2,6,10),3,1) Ab &lt;- cbind(A,b) solve(A,b) ## [,1] ## [1,] 0 ## [2,] 0 ## [3,] 2 hakidashi2(Ab) ## [,1] [,2] [,3] [,4] ## [1,] 1 0 0 0 ## [2,] 0 1 0 0 ## [3,] 0 0 1 2 A &lt;- matrix(c(1,2,3,2,3,1,3,5,4),3,3) b &lt;- matrix(c(4,9,7),3,1) Ab &lt;- cbind(A,b) # solve(A,b) # error hakidashi2(Ab) ## [,1] [,2] [,3] [,4] ## [1,] 1 0 1 6 ## [2,] 0 1 1 -1 ## [3,] 0 0 0 -10 A &lt;- matrix(c(1,2,3,-4,-1,2,-11,-8,-5,13,5,-3),3,4) b &lt;- matrix(c(6,5,4),3,1) Ab &lt;- cbind(A,b) # solve(A,b) # error hakidashi2(Ab) ## [,1] [,2] [,3] [,4] [,5] ## [1,] 1 0 -3 1 2 ## [2,] 0 1 2 -3 -1 ## [3,] 0 0 0 0 0 "],
["行列の標準化と固有値.html", "S 7 行列の標準化と固有値 7.1 例題7.1 (1) 7.2 例題7.1 (2) 7.3 問題7.1 7.4 問題7.2 7.5 問題7.3 7.6 問題7.4 7.7 演習問題7", " S 7 行列の標準化と固有値 7.1 例題7.1 (1) library(tidyverse) A &lt;- matrix(c(3,4,2,1),2,2) eigen(A) ## eigen() decomposition ## $values ## [1] 5 -1 ## ## $vectors ## [,1] [,2] ## [1,] 0.7071068 -0.4472136 ## [2,] 0.7071068 0.8944272 lambda &lt;- eigen(A)$values P &lt;- eigen(A)$vectors round(solve(P) %*% A %*% P, digits = 10) ## [,1] [,2] ## [1,] 5 0 ## [2,] 0 -1 2次元平面上のベクトルとして表現． eigenvec &lt;- 2 * P cardesian &lt;- expand.grid(x = seq(-10,10,1), y = seq(-10,10,1)) trans &lt;- cardesian for (i in 1:nrow(cardesian)) { trans[i,]&lt;-A %*% t(as.matrix(cardesian[i,])) } trans_eigen &lt;- rbind(lambda,lambda) * A %*% eigenvec bind_rows(&quot;Original&quot; = cardesian, &quot;Transformed&quot; = trans, .id = &quot;type&quot;) %&gt;% ggplot() + geom_point(aes(x=x,y=y,color=type)) + geom_segment( aes(x = 0, y = 0, xend = eigenvec[1,1], yend = eigenvec[2,1]), arrow = arrow(length = unit(1, &quot;mm&quot;)), color = &quot;red&quot; ) + geom_segment( aes(x = 0, y = 0, xend = eigenvec[1,2], yend = eigenvec[2,2]), arrow = arrow(length = unit(1, &quot;mm&quot;)), color = &quot;red&quot; ) + geom_segment( aes(x = 0, y = 0, xend = trans_eigen[1,1], yend = trans_eigen[2,1]), arrow = arrow(length = unit(1, &quot;mm&quot;)), color = &quot;blue&quot; ) + geom_segment( aes(x = 0, y = 0, xend = trans_eigen[1,2], yend = trans_eigen[2,2]), arrow = arrow(length = unit(1, &quot;mm&quot;)), color = &quot;blue&quot; ) + coord_fixed() + theme_classic() 斜交軸で表現． cardesian &lt;- expand.grid(x = seq(-10,10,1), y = seq(-10,10,1)) cardesianP &lt;- cardesian for (i in 1:nrow(cardesian)) { cardesianP[i,]&lt;- P %*% t(as.matrix(cardesian[i,])) } trans &lt;- cardesianP for (i in 1:nrow(cardesianP)) { trans[i,]&lt;- A %*% t(as.matrix(cardesianP[i,])) } trans_eigen &lt;- rbind(lambda,lambda) * A %*% eigenvec bind_rows(&quot;Original&quot; = cardesianP, &quot;Transformed&quot; = trans, .id = &quot;type&quot;) %&gt;% ggplot() + geom_point(aes(x=x,y=y,color=type)) + geom_segment( aes(x = 0, y = 0, xend = eigenvec[1,1], yend = eigenvec[2,1]), arrow = arrow(length = unit(1, &quot;mm&quot;)), color = &quot;red&quot; ) + geom_segment( aes(x = 0, y = 0, xend = eigenvec[1,2], yend = eigenvec[2,2]), arrow = arrow(length = unit(1, &quot;mm&quot;)), color = &quot;red&quot; ) + geom_segment( aes(x = 0, y = 0, xend = trans_eigen[1,1], yend = trans_eigen[2,1]), arrow = arrow(length = unit(1, &quot;mm&quot;)), color = &quot;blue&quot; ) + geom_segment( aes(x = 0, y = 0, xend = trans_eigen[1,2], yend = trans_eigen[2,2]), arrow = arrow(length = unit(1, &quot;mm&quot;)), color = &quot;blue&quot; ) + coord_fixed() + theme_classic() 対角化でととのえる． trans &lt;- cardesian for (i in 1:nrow(cardesian)) { trans[i,]&lt;-A %*% P %*% t(as.matrix(cardesian[i,])) } bind_rows(&quot;Original&quot; = cardesian, &quot;Transformed&quot; = trans, .id = &quot;type&quot;) %&gt;% ggplot() + geom_point(aes(x=x,y=y,color=type)) + coord_fixed() + theme_classic() trans &lt;- cardesian for (i in 1:nrow(cardesian)) { trans[i,] &lt;- solve(P) %*% A %*% P %*% t(as.matrix(cardesian[i,])) } bind_rows(&quot;Original&quot; = cardesian, &quot;Transformed&quot; = trans, .id = &quot;type&quot;) %&gt;% ggplot() + geom_point(aes(x=x,y=y,color=type)) + coord_fixed() + theme_classic() 7.2 例題7.1 (2) A &lt;- matrix(c(5,-1,1,3),2,2) eigen(A) ## eigen() decomposition ## $values ## [1] 4 4 ## ## $vectors ## [,1] [,2] ## [1,] 0.7071068 -0.7071068 ## [2,] -0.7071068 0.7071068 lambda &lt;- eigen(A)$values P &lt;- eigen(A)$vectors det(P) ## [1] 4.710277e-16 \\(det(P) \\approx 0\\)なので本来は逆行列が求められないはずだが，むりやり逆行列が求められ対角化できてしまう．正規化における誤差のせい？【要確認】 とりあえずやってみる． round(solve(P) %*% A %*% P, digits = 10) ## [,1] [,2] ## [1,] 4 0 ## [2,] 0 4 2次元平面上のベクトルとして表現． eigenvec &lt;- 2 * P cardesian &lt;- expand.grid(x = seq(-10,10,1), y = seq(-10,10,1)) trans &lt;- cardesian for (i in 1:nrow(cardesian)) { trans[i,]&lt;-A %*% t(as.matrix(cardesian[i,])) } trans_eigen &lt;- rbind(lambda,lambda) * A %*% eigenvec bind_rows(&quot;Original&quot; = cardesian, &quot;Transformed&quot; = trans, .id = &quot;type&quot;) %&gt;% ggplot() + geom_point(aes(x=x,y=y,color=type)) + geom_segment( aes(x = 0, y = 0, xend = eigenvec[1,1], yend = eigenvec[2,1]), arrow = arrow(length = unit(1, &quot;mm&quot;)), color = &quot;red&quot; ) + geom_segment( aes(x = 0, y = 0, xend = eigenvec[1,2], yend = eigenvec[2,2]), arrow = arrow(length = unit(1, &quot;mm&quot;)), color = &quot;red&quot; ) + geom_segment( aes(x = 0, y = 0, xend = trans_eigen[1,1], yend = trans_eigen[2,1]), arrow = arrow(length = unit(1, &quot;mm&quot;)), color = &quot;blue&quot; ) + geom_segment( aes(x = 0, y = 0, xend = trans_eigen[1,2], yend = trans_eigen[2,2]), arrow = arrow(length = unit(1, &quot;mm&quot;)), color = &quot;blue&quot; ) + coord_fixed() + theme_classic() 斜交軸で表現． cardesian &lt;- expand.grid(x = seq(-10,10,1), y = seq(-10,10,1)) cardesianP &lt;- cardesian for (i in 1:nrow(cardesian)) { cardesianP[i,]&lt;- P %*% t(as.matrix(cardesian[i,])) } trans &lt;- cardesianP for (i in 1:nrow(cardesianP)) { trans[i,]&lt;- A %*% t(as.matrix(cardesianP[i,])) } trans_eigen &lt;- rbind(lambda,lambda) * A %*% eigenvec bind_rows(&quot;Original&quot; = cardesianP, &quot;Transformed&quot; = trans, .id = &quot;type&quot;) %&gt;% ggplot() + geom_point(aes(x=x,y=y,color=type)) + geom_segment( aes(x = 0, y = 0, xend = eigenvec[1,1], yend = eigenvec[2,1]), arrow = arrow(length = unit(1, &quot;mm&quot;)), color = &quot;red&quot; ) + geom_segment( aes(x = 0, y = 0, xend = eigenvec[1,2], yend = eigenvec[2,2]), arrow = arrow(length = unit(1, &quot;mm&quot;)), color = &quot;red&quot; ) + geom_segment( aes(x = 0, y = 0, xend = trans_eigen[1,1], yend = trans_eigen[2,1]), arrow = arrow(length = unit(1, &quot;mm&quot;)), color = &quot;blue&quot; ) + geom_segment( aes(x = 0, y = 0, xend = trans_eigen[1,2], yend = trans_eigen[2,2]), arrow = arrow(length = unit(1, &quot;mm&quot;)), color = &quot;blue&quot; ) + coord_fixed() + theme_classic() 対角化でととのえる． trans &lt;- cardesian for (i in 1:nrow(cardesian)) { trans[i,]&lt;-A %*% P %*% t(as.matrix(cardesian[i,])) } bind_rows(&quot;Original&quot; = cardesian, &quot;Transformed&quot; = trans, .id = &quot;type&quot;) %&gt;% ggplot() + geom_point(aes(x=x,y=y,color=type)) + coord_fixed() + theme_classic() trans &lt;- cardesian for (i in 1:nrow(cardesian)) { trans[i,] &lt;- solve(P) %*% A %*% P %*% t(as.matrix(cardesian[i,])) } bind_rows(&quot;Original&quot; = cardesian, &quot;Transformed&quot; = trans, .id = &quot;type&quot;) %&gt;% ggplot() + geom_point(aes(x=x,y=y,color=type)) + coord_fixed() + theme_classic() 7.3 問題7.1 A &lt;- matrix(c(3,4,2,5),2,2) eigen(A) ## eigen() decomposition ## $values ## [1] 7 1 ## ## $vectors ## [,1] [,2] ## [1,] -0.4472136 -0.7071068 ## [2,] -0.8944272 0.7071068 A &lt;- matrix(c(6,2,-2,2),2,2) eigen(A) ## eigen() decomposition ## $values ## [1] 4 4 ## ## $vectors ## [,1] [,2] ## [1,] 0.7071068 0.7071068 ## [2,] 0.7071068 0.7071068 A &lt;- matrix(c(2,-1,3,0),2,2) eigen(A) ## eigen() decomposition ## $values ## [1] 1+1.414214i 1-1.414214i ## ## $vectors ## [,1] [,2] ## [1,] 0.8660254+0.0000000i 0.8660254+0.0000000i ## [2,] -0.2886751+0.4082483i -0.2886751-0.4082483i 7.4 問題7.2 一例として． A &lt;- matrix(c(5,0,0,0,4,0,0,0,3),3,3) eigen(A) ## eigen() decomposition ## $values ## [1] 5 4 3 ## ## $vectors ## [,1] [,2] [,3] ## [1,] 1 0 0 ## [2,] 0 1 0 ## [3,] 0 0 1 7.5 問題7.3 A &lt;- matrix(c(3,4,2,5),2,2) P &lt;- eigen(A)$vectors round(solve(P) %*% A %*% P, digits = 10) ## [,1] [,2] ## [1,] 7 0 ## [2,] 0 1 A &lt;- matrix(c(6,2,-2,2),2,2) P &lt;- eigen(A)$vectors round(solve(P) %*% A %*% P, digits = 10) ## [,1] [,2] ## [1,] 4.00e+00 -2.98e-08 ## [2,] 2.98e-08 4.00e+00 7.6 問題7.4 A &lt;- matrix(c(1,2,0,2,2,2,0,2,3),3,3) eigen(A) ## eigen() decomposition ## $values ## [1] 5 2 -1 ## ## $vectors ## [,1] [,2] [,3] ## [1,] 0.3333333 -0.6666667 -0.6666667 ## [2,] 0.6666667 -0.3333333 0.6666667 ## [3,] 0.6666667 0.6666667 -0.3333333 P &lt;- eigen(A)$vectors round(solve(P) %*% A %*% P, digits = 10) ## [,1] [,2] [,3] ## [1,] 5 0 0 ## [2,] 0 2 0 ## [3,] 0 0 -1 7.7 演習問題7 1 A &lt;- matrix(c(3,1,-2,2,4,-4,2,1,-1),3,3) eigen(A) ## eigen() decomposition ## $values ## [1] 3 2 1 ## ## $vectors ## [,1] [,2] [,3] ## [1,] -7.691851e-16 8.944272e-01 7.071068e-01 ## [2,] 7.071068e-01 -4.472136e-01 -1.942890e-16 ## [3,] -7.071068e-01 1.805948e-15 -7.071068e-01 P &lt;- eigen(A)$vectors round(solve(P) %*% A %*% P, digits = 10) ## [,1] [,2] [,3] ## [1,] 3 0 0 ## [2,] 0 2 0 ## [3,] 0 0 1 A &lt;- matrix(c(2,1,1,1,2,-1,1,-1,0),3,3) eigen(A) ## eigen() decomposition ## $values ## [1] 3 2 -1 ## ## $vectors ## [,1] [,2] [,3] ## [1,] 7.071068e-01 0.5773503 -0.4082483 ## [2,] 7.071068e-01 -0.5773503 0.4082483 ## [3,] 1.110223e-16 0.5773503 0.8164966 P &lt;- eigen(A)$vectors round(solve(P) %*% A %*% P, digits = 10) ## [,1] [,2] [,3] ## [1,] 3 0 0 ## [2,] 0 2 0 ## [3,] 0 0 -1 A &lt;- matrix(c(3,-2,1,2,-1,1,-2,2,0),3,3) eigen(A) ## eigen() decomposition ## $values ## [1] 1.000000e+00 1.000000e+00 1.332268e-15 ## ## $vectors ## [,1] [,2] [,3] ## [1,] 0.8164897 0.8017837 0.6666667 ## [2,] -0.4111453 -0.5345225 -0.6666667 ## [3,] 0.4053445 0.2672612 0.3333333 P &lt;- eigen(A)$vectors round(solve(P) %*% A %*% P, digits = 10) ## [,1] [,2] [,3] ## [1,] 1 0 0 ## [2,] 0 1 0 ## [3,] 0 0 0 A &lt;- matrix(c(5,-11,3,2,0,3,-2,7,0),3,3) eigen(A) ## eigen() decomposition ## $values ## [1] 3e+00+0e+00i 1e+00+6e-08i 1e+00-6e-08i ## ## $vectors ## [,1] [,2] [,3] ## [1,] 0.4082483+0i 0.5345225+0i 0.5345225-0i ## [2,] 0.4082483+0i -0.2672612+0i -0.2672612-0i ## [3,] 0.8164966+0i 0.8017837+0i 0.8017837+0i P &lt;- eigen(A)$vectors round(solve(P) %*% A %*% P, digits = 10) ## [,1] [,2] [,3] ## [1,] 3e+00-0.00e+00i 0e+00-9.80e-09i 0e+00-9.80e-09i ## [2,] 0e+00+4.47e-08i 1e+00+0.00e+00i 0e+00-1.49e-08i ## [3,] 0e+00-1.49e-08i 0e+00+1.49e-08i 1e+00-0.00e+00i "]
]
